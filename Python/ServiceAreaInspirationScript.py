# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# ServiceAreaScript2.py
# Created on: 2018-03-09 16:23:33.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: ServiceAreaScript2 <Select_Layer_Type> <Destinations_Layer> <Default_Break_Values> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
Select_Layer_Type = arcpy.GetParameterAsText(0)
if Select_Layer_Type == '#' or not Select_Layer_Type:
    Select_Layer_Type = "Facilities" # provide a default value if unspecified

Destinations_Layer = arcpy.GetParameterAsText(1)
if Destinations_Layer == '#' or not Destinations_Layer:
    Destinations_Layer = "Z:\\AdvancedGIS\\FinalProject\\Data1\\Schools.shp" # provide a default value if unspecified

Default_Break_Values = arcpy.GetParameterAsText(2)
if Default_Break_Values == '#' or not Default_Break_Values:
    Default_Break_Values = "500 1000" # provide a default value if unspecified

# Local variables:
StreetCenterlines_NetworkDataset_nd = "Z:\\AdvancedGIS\\FinalProject\\Data1\\StreetCenterlines_NetworkDataset.nd"
Service_Area = "ServiceArea"
Service_Area_with_Destinations = Service_Area
Solved_Service_Area = Service_Area_with_Destinations
Solve_Succeeded = "true"
Parcels_shp = "Z:\\AdvancedGIS\\FinalProject\\Data1\\Parcels.shp"
Polygons = Solved_Service_Area
SAPolygons_Layer = "SAPolygons_Layer"
AllWalkableParcels_shp = "Z:\\AdvancedGIS\\FinalProject\\Data1\\AllWalkableParcels.shp"
WalkableParcels_shp = "Z:\\AdvancedGIS\\FinalProject\\Data1\\WalkableParcels.shp"

# Process: Make Service Area Layer
arcpy.MakeServiceAreaLayer_na(StreetCenterlines_NetworkDataset_nd, "ServiceArea", "Length", "TRAVEL_FROM", Default_Break_Values, "SIMPLE_POLYS", "NO_MERGE", "RINGS", "NO_LINES", "OVERLAP", "NO_SPLIT", "", "", "ALLOW_UTURNS", "Oneway", "TRIM_POLYS", "100 Meters", "NO_LINES_SOURCE_FIELDS", "NO_HIERARCHY", "")

# Process: Add Locations
arcpy.AddLocations_na(Service_Area, Select_Layer_Type, Destinations_Layer, "Name Address #", "5000 Meters", "", "Hennepin_County_Street_Centerlines SHAPE;StreetCenterlines_NetworkDataset_Junctions NONE", "MATCH_TO_CLOSEST", "APPEND", "NO_SNAP", "5 Meters", "INCLUDE", "Hennepin_County_Street_Centerlines #;StreetCenterlines_NetworkDataset_Junctions #")

# Process: Solve
arcpy.Solve_na(Service_Area_with_Destinations, "SKIP", "TERMINATE", "", "")

# Process: Select Data
arcpy.SelectData_management(Solved_Service_Area, "Polygons")

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(Polygons, SAPolygons_Layer, "", "", "ObjectID ObjectID VISIBLE NONE;Shape Shape VISIBLE NONE;FacilityID FacilityID VISIBLE NONE;Name Name VISIBLE NONE;FromBreak FromBreak VISIBLE NONE;ToBreak ToBreak VISIBLE NONE")

# Process: Clip
arcpy.Clip_analysis(Parcels_shp, SAPolygons_Layer, AllWalkableParcels_shp, "")

# Process: Select
arcpy.Select_analysis(AllWalkableParcels_shp, WalkableParcels_shp, "\"LOT_TYPE\" = 'Residential'")

